/* 
  1. If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
  Find the sum of all the multiples of 3 or 5 below 1000.
*/
const SumMult3or5 = (n) => {
  let sum = 0
  for(let i = 0; i < n; i++) {
    if(i % 3 === 0 || i % 5 === 0) sum += i
  }
  return sum
}
// console.log(SumMult3or5(1000))
// ANSWER: 233168

/*
  2. Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
      1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
  By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
*/
const evenFibNums = () => {
  let num1 = 0, num2 = 1, next = 0, sum = 0
  function fib() {
    next = num1 + num2
    num1 = num2
    num2 = next
    next % 2 === 0 ? sum += next : sum += 0
  }
  while(next <= 4000000) fib()
  return sum
}
// console.log(evenFibNums())
// ANSWER: 4613732